{"trial_id": "0002", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "conv_1_filters", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 2, "max_value": 5, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_2_filters", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_2_kernel", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_2_size", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Int", "config": {"name": "conv_3_filters", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_3_kernel", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_3_size", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Int", "config": {"name": "dense_1_units", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}, {"class_name": "Int", "config": {"name": "conv_4_filters", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_4_kernel", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_4_size", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}], "values": {"conv_1_filters": 128, "num_layers": 3, "conv_2_filters": 112, "conv_2_kernel": 2, "pool_2_size": 2, "conv_3_filters": 48, "conv_3_kernel": 2, "pool_3_size": 2, "dense_1_units": 480, "learning_rate": 0.0001, "conv_4_filters": 80, "conv_4_kernel": 3, "pool_4_size": 3, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 4, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\tuners\\hyperband.py\", line 425, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 213, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 155, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\tuners\\hyperband.py\", line 428, in _build_hypermodel\n    model = super()._build_hypermodel(hp)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 146, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"C:\\Users\\Micha\\AppData\\Local\\Temp\\ipykernel_19820\\3419715521.py\", line 20, in build_model\n    model.add(MaxPooling2D(pool_size=hp.Choice(f'pool_{i+2}_size', values = [2,3])))\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\tensorflow\\python\\trackable\\base.py\", line 204, in _method_wrapper\n    result = method(self, *args, **kwargs)\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\Micha\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1020, in _create_c_op\n    raise ValueError(e.message)\nValueError: Exception encountered when calling layer \"max_pooling2d_3\" (type MaxPooling2D).\n\nNegative dimension size caused by subtracting 3 from 1 for '{{node max_pooling2d_3/MaxPool}} = MaxPool[T=DT_FLOAT, data_format=\"NHWC\", explicit_paddings=[], ksize=[1, 3, 3, 1], padding=\"VALID\", strides=[1, 3, 3, 1]](Placeholder)' with input shapes: [?,1,1,80].\n\nCall arguments received by layer \"max_pooling2d_3\" (type MaxPooling2D):\n  \u2022 inputs=tf.Tensor(shape=(None, 1, 1, 80), dtype=float32)\n"}